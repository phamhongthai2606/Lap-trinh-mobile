{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\code\\\\mobile\\\\spotify-main\\\\src\\\\screens\\\\login1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.onLogin = function () {\n      if (_this.state.email == \"1\" && _this.state.password == \"1\") {\n        _this.props.navigation.navigate(\"Main\");\n      } else {\n        _this.setState({\n          nof: \"Email or password is incorret\"\n        });\n      }\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      nof: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpP26QfIm6SfD37GNHH-IC-SLlRnJsnKnIqg&usqp=CAU\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"#aaaaaa\",\n          marginTop: -50,\n          fontWeight: \"bold\",\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"Nguy\\xEA\\u0303n Ph\\u01B0\\u01A1ng PC\"), React.createElement(TextInput, {\n        style: {\n          width: 300,\n          height: 40,\n          borderRadius: 5,\n          fontSize: 16,\n          paddingLeft: 15,\n          paddingTop: -10,\n          backgroundColor: \"#ffff\",\n          color: \"#000000\",\n          marginHorizontal: 25,\n          marginTop: 10,\n          borderWidth: 1,\n          borderColor: \"#bbb\"\n        },\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        placeholder: \"Email\",\n        placeholderTextColor: \"#694fad\",\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          width: 300,\n          height: 40,\n          borderRadius: 5,\n          fontSize: 16,\n          paddingLeft: 15,\n          paddingTop: -10,\n          backgroundColor: \"#ffff\",\n          color: \"#000000\",\n          marginHorizontal: 25,\n          marginTop: 10,\n          borderWidth: 1,\n          borderColor: \"#bbb\"\n        },\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: \"Password\",\n        placeholderTextColor: \"#694fad\",\n        underlineColorAndroid: \"transparent\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, this.state.nof), React.createElement(TouchableOpacity, {\n        style: styles.btnLogin,\n        onPress: function onPress() {\n          return _this2.onLogin();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.textlogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, \"\\u0110\\u0103ng nh\\u1EADp\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"black\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  image: {\n    width: 200,\n    height: 200,\n    borderRadius: 50,\n    marginBottom: 20,\n    backgroundColor: 'red'\n  },\n  textlogin: {\n    textAlign: \"center\",\n    color: \"#000000\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  btnLogin: {\n    width: 300,\n    height: 45,\n    borderRadius: 25,\n    backgroundColor: \"#45d179\",\n    marginTop: 25,\n    borderWidth: 1,\n    borderColor: \"black\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/code/mobile/spotify-main/src/screens/login1.js"],"names":["React","Component","Dimensions","get","height","width","Login","props","onLogin","state","email","password","navigation","navigate","setState","nof","styles","container","image","uri","color","marginTop","fontWeight","fontSize","borderRadius","paddingLeft","paddingTop","backgroundColor","marginHorizontal","borderWidth","borderColor","btnLogin","textlogin","StyleSheet","create","flex","justifyContent","alignItems","marginBottom","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Dimensions,\r\n  Image,\r\n} from \"react-native\";\r\nconst { height, width } = Dimensions.get(\"window\");\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      nof: \"\",\r\n    };\r\n  }\r\n  onLogin = () => {\r\n    if (\r\n      this.state.email == \"1\" &&\r\n      this.state.password == \"1\"\r\n    ) {\r\n      this.props.navigation.navigate(\"Main\");\r\n    } else {\r\n      this.setState({\r\n        nof: \"Email or password is incorret\",\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Image\r\n          style={styles.image}\r\n          source={{\r\n            uri: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpP26QfIm6SfD37GNHH-IC-SLlRnJsnKnIqg&usqp=CAU\",\r\n          }}\r\n        />\r\n        <Text style={{ color: \"#aaaaaa\",marginTop: -50, fontWeight: \"bold\", fontSize: 25 }}>\r\n              Nguyễn Phương PC\r\n          </Text>\r\n         \r\n        <TextInput\r\n          style={{\r\n            width: 300,\r\n            height: 40,\r\n            borderRadius: 5,\r\n            fontSize: 16,\r\n            paddingLeft: 15,\r\n            paddingTop: -10,\r\n            backgroundColor: \"#ffff\",\r\n            color: \"#000000\",\r\n            marginHorizontal: 25,\r\n            marginTop: 10,\r\n            borderWidth: 1,\r\n            borderColor: \"#bbb\",\r\n          }}\r\n          onChangeText={(email) => this.setState({ email })}\r\n          placeholder={\"Email\"}\r\n          placeholderTextColor={\"#694fad\"}\r\n          underlineColorAndroid=\"transparent\"\r\n        ></TextInput>\r\n        <TextInput\r\n          style={{\r\n            width: 300,\r\n            height: 40,\r\n            borderRadius: 5,\r\n            fontSize: 16,\r\n            paddingLeft: 15,\r\n            paddingTop: -10,\r\n            backgroundColor: \"#ffff\",\r\n            color: \"#000000\",\r\n            marginHorizontal: 25,\r\n            marginTop: 10,\r\n            borderWidth: 1,\r\n            borderColor: \"#bbb\",\r\n          }}\r\n          onChangeText={(password) => this.setState({ password })}\r\n          placeholder={\"Password\"}\r\n          placeholderTextColor={\"#694fad\"}\r\n          underlineColorAndroid=\"transparent\"\r\n          secureTextEntry={true}\r\n        ></TextInput>\r\n        <Text style={{ color: \"red\" }}>{this.state.nof}</Text>\r\n        <TouchableOpacity\r\n          style={styles.btnLogin}\r\n          onPress={() => this.onLogin()}\r\n        >\r\n          <Text style={styles.textlogin}>Đăng nhập</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      // <TouchableOpacity style={{marginTop:100}} onPress={() => this.props.navigation.navigate(\"Main\")}>\r\n      //   <Text>Login</Text>\r\n      // </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"black\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 50,\r\n    marginBottom: 20,\r\n    backgroundColor: 'red'\r\n  },\r\n  textlogin: {\r\n    textAlign: \"center\",\r\n    color: \"#000000\",\r\n    fontWeight: \"bold\",\r\n    fontSize : 20,\r\n  },\r\n  btnLogin: {\r\n    width: 300,\r\n    height: 45,\r\n    borderRadius: 25,\r\n    backgroundColor: \"#45d179\",\r\n    marginTop: 25,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}